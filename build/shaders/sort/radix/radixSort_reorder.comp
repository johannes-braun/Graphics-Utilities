const uint _bits = 4;
const uint _radix = 1 << _bits;
const uint _lsize = 64;

layout(local_size_x = 64) in;

layout(location=0) restrict readonly buffer Keys { uint keys[]; };
layout(location=1) restrict buffer Hist { uint histogram[]; };
shared uint local_histogram[_radix * 64];

uniform uint pass;
uniform uint offset;

void main()
{
    uint gid = gl_GlobalInvocationID.x;
    uint lid = gl_LocalInvocationID.x;

    uint group_id = gl_WorkGroupID.x;
    uint num_groups = gl_NumWorkGroups.x;
    uint lsize = gl_WorkGroupSize.x;

    for(uint i=0; i < _radix; ++i)
        local_histogram[i * lsize + lid];