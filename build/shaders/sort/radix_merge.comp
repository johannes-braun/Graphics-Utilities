#define WSIZE 32

layout(local_size_x=WSIZE) in;

layout(binding=0) restrict readonly buffer Data
{
    uint data[];
};

layout(binding=1) restrict writeonly buffer Target
{
    uint target[];
};

uint binary_insert_index(uint lower, uint upper, uint key) {
    int curIn = 0;
    int res = 0;
    while (lower <= upper) {
        curIn = int((upper + lower) / 2);
        if (data[curIn] == key) {
            res = curIn;
        } else if (data[curIn] < key) {
            lower = curIn + 1; // its in the upper
            res = curIn + 1;
        } else {
            upper = curIn - 1; // its in the lower
            res = curIn;
        }
    }
    return uint(res);
}

const uint size = 32;

void main()
{
    // Step 1:
    // s | s | s | s | s | s | ...
    uint gid = uint(gl_GlobalInvocationID.x);
    uint key = data[gid];

    uint use_prev = uint((gl_WorkGroupID.x >> 1) != 0);
    uint base = (gl_WorkGroupID.x + 1 - (2*use_prev));
    uint idx = binary_insert_index(base * size, base * size + size, key);

    target[gid] = idx;
}