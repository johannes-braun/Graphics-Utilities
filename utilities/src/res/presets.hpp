#pragma once
#include <array>
#include "vertex.hpp"

namespace res::presets
{
    namespace cube
    {
        const std::array<vertex, 24> vertices{
            //Back
            vertex({ -1, 1, -1 },{ 0, 1 },{ 0, 0, -1 }),
            vertex({ 1, 1, -1 },{ 1, 1 },{ 0, 0, -1 }),
            vertex({ 1, -1, -1 },{ 1, 0 },{ 0, 0, -1 }),
            vertex({ -1, -1, -1 },{ 0, 0 },{ 0, 0, -1 }),

            //Front
            vertex({ -1, 1, 1 },{ 0, 1 },{ 0, 0, 1 }),
            vertex({ 1, 1, 1 },{ 1, 1 },{ 0, 0, 1 }),
            vertex({ 1, -1, 1 },{ 1, 0 },{ 0, 0, 1 }),
            vertex({ -1, -1, 1 },{ 0, 0 },{ 0, 0, 1 }),

            //Bottom
            vertex({ -1, -1, -1 },{ 0, 0 },{ 0, -1, 0 }),
            vertex({ 1, -1, -1 },{ 0, 1 },{ 0, -1, 0 }),
            vertex({ 1, -1, 1 },{ 1, 1 },{ 0, -1, 0 }),
            vertex({ -1, -1, 1 },{ 0, 1 },{ 0, -1, 0 }),

            //Top
            vertex({ -1, 1, -1 },{ 0, 0 },{ 0, 1, 0 }),
            vertex({ 1, 1, -1 },{ 1, 0 },{ 0, 1, 0 }),
            vertex({ 1, 1, 1 },{ 1, 1 },{ 0, 1, 0 }),
            vertex({ -1, 1, 1 },{ 0, 1 },{ 0, 1, 0 }),

            //Right
            vertex({ 1, -1, -1 },{ 0, 0 },{ 1, 0, 0 }),
            vertex({ 1, 1, -1 },{ 1, 0 },{ 1, 0, 0 }),
            vertex({ 1, 1, 1 },{ 1, 1 },{ 1, 0, 0 }),
            vertex({ 1, -1, 1 },{ 0, 1 },{ 1, 0, 0 }),

            //Left
            vertex({ -1, -1, -1 },{ 0, 0 },{ -1, 0, 0 }),
            vertex({ -1, 1, -1 },{ 1, 0 },{ -1, 0, 0 }),
            vertex({ -1, 1, 1 },{ 1, 1 },{ -1, 0, 0 }),
            vertex({ -1, -1, 1 },{ 0, 1 },{ -1, 0, 0 }),
        };

        constexpr std::array<uint32_t, 36> indices{
            0, 1, 2,        0, 2, 3,
            6, 5, 4,        7, 6, 4,
            8, 9, 10,       8, 10, 11,
            14, 13, 12,     15, 14, 12,
            16, 17, 18,     16, 18, 19,
            22, 21, 20,     23, 22, 20,
        };
    }
}
