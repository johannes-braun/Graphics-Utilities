function(message)
    if (NOT MESSAGE_QUIET OR "${ARGV0}" MATCHES "FATAL_ERROR")
        _message(${ARGV})
    endif()
endfunction()

function (add_subdirectory_log dir)
	set(MESSAGE_QUIET ON)
		add_subdirectory(${dir})
	unset(MESSAGE_QUIET)
	gfx_msg("Add external library: ${dir}")
endfunction()

set(MESSAGE_QUIET ON)
add_subdirectory_log(glm)
add_library(glm::glm ALIAS glm)

add_subdirectory_log(mygl)
add_subdirectory_log(glshader)
add_subdirectory_log(vulkan)
add_subdirectory_log(soloud)
add_subdirectory_log(pugixml)
add_library(zeux::pugixml ALIAS pugixml)

set(GLFW_BUILD_EXAMPLES OFF)
set(GLFW_BUILD_TESTS OFF)
set(GLFW_BUILD_DOCS OFF)
set(BUILD_SHARED_LIBS OFF)
add_subdirectory_log(glfw)
set(BUILD_SHARED_LIBS OFF)
add_library(glfw::glfw ALIAS glfw)

set(EIGEN_SPLIT_LARGE_TESTS OFF)
set(BUILD_TESTING OFF)
add_subdirectory_log(eigen)
add_library(eigen::eigen ALIAS eigen)

cmake_policy(SET CMP0048 OLD)
set(ASSIMP_BUILD_ASSIMP_TOOLS OFF)
set(ASSIMP_BUILD_TESTS OFF)
set(ASSIMP_NO_EXPORT ON)
set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
set(ASSIMP_OPT_BUILD_PACKAGES ON)
set(ASSIMP_BUILD_AMF_IMPORTER OFF)
set(ASSIMP_BUILD_AC_IMPORTER OFF)
set(ASSIMP_BUILD_ASE_IMPORTER OFF)
set(ASSIMP_BUILD_ASSBIN_IMPORTER OFF)
set(ASSIMP_BUILD_ASSXML_IMPORTER OFF)
set(ASSIMP_BUILD_B3D_IMPORTER OFF)
set(ASSIMP_BUILD_BVH_IMPORTER OFF)
set(ASSIMP_BUILD_DXF_IMPORTER OFF)
set(ASSIMP_BUILD_CSM_IMPORTER OFF)
set(ASSIMP_BUILD_HMP_IMPORTER OFF)
set(ASSIMP_BUILD_IRRMESH_IMPORTER OFF)
set(ASSIMP_BUILD_IRR_IMPORTER OFF)
set(ASSIMP_BUILD_LWO_IMPORTER OFF)
set(ASSIMP_BUILD_LWS_IMPORTER OFF)
set(ASSIMP_BUILD_MD2_IMPORTER OFF)
set(ASSIMP_BUILD_MD3_IMPORTER OFF)
set(ASSIMP_BUILD_MD5_IMPORTER OFF)
set(ASSIMP_BUILD_MDC_IMPORTER OFF)
set(ASSIMP_BUILD_MDL_IMPORTER OFF)
set(ASSIMP_BUILD_NFF_IMPORTER OFF)
set(ASSIMP_BUILD_NDO_IMPORTER OFF)
set(ASSIMP_BUILD_OFF_IMPORTER OFF)
set(ASSIMP_BUILD_OGRE_IMPORTER OFF)
set(ASSIMP_BUILD_OPENGEX_IMPORTER OFF)
set(ASSIMP_BUILD_COB_IMPORTER OFF)
set(ASSIMP_BUILD_IFC_IMPORTER OFF)
set(ASSIMP_BUILD_XGL_IMPORTER OFF)
set(ASSIMP_BUILD_Q3D_IMPORTER OFF)
set(ASSIMP_BUILD_Q3BSP_IMPORTER OFF)
set(ASSIMP_BUILD_RAW_IMPORTER OFF)
set(ASSIMP_BUILD_SIB_IMPORTER OFF)
set(ASSIMP_BUILD_SMD_IMPORTER OFF)
set(ASSIMP_BUILD_TERRAGEN_IMPORTER OFF)
set(ASSIMP_BUILD_3D_IMPORTER OFF)
set(ASSIMP_BUILD_X_IMPORTER OFF)
set(ASSIMP_BUILD_X3D_IMPORTER OFF)
set(ASSIMP_BUILD_3MF_IMPORTER OFF)
set(ASSIMP_BUILD_MMD_IMPORTER OFF)
set(BUILD_SHARED_LIBS ON)
add_subdirectory_log(assimp)
add_library(assimp::assimp ALIAS assimp)
if(MSVC)
    target_compile_options(assimp PRIVATE /MP)
endif()
if(GFX_USE_INSTALL)
	install(EXPORT assimpTargets
		FILE assimpTargets.cmake
		NAMESPACE assimp::
		DESTINATION lib/cmake/assimp
	)
	install(EXPORT zlibstaticTargets
		FILE zlibstaticTargets.cmake
		NAMESPACE assimp::
		DESTINATION lib/cmake/assimp
	)
	install(EXPORT IrrXMLTargets
		FILE IrrXMLTargets.cmake
		NAMESPACE assimp::
		DESTINATION lib/cmake/assimp
	)
endif()
set(BUILD_SHARED_LIBS OFF)
cmake_policy(SET CMP0048 NEW)
unset(MESSAGE_QUIET)