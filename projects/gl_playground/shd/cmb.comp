layout(local_size_x = 16, local_size_y = 16) in;

layout(binding = 0) uniform sampler2D in_texture;
layout(binding = 0, rgba8) uniform image2D out_image;

void main()
{
    ivec2 pixel = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(out_image);
    int levels = 5;//int(1 + log2(max(size.x, size.y)));

    vec4 color = vec4(0);
    for(int i=0; i<levels; ++i)
    {
        color += textureLod(in_texture, pixel / vec2(size), i);
    }
    imageStore(out_image, pixel, color / float(levels));
}