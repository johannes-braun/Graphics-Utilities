set(current_executable vk_and_gl)
mark_as_executable(${current_executable})

include(${CMAKE_MODULE_PATH}/spv/compile_spv.cmake)
create_spirv(${current_executable}.shaders ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/shaders/shaders.hpp spectral)

find_package(glfw3 REQUIRED)
target_link_libraries(${current_executable} PRIVATE ${current_executable}.shaders)
target_link_libraries(${current_executable} PRIVATE Qt5::Core)
target_link_libraries(${current_executable} PRIVATE Qt5::Widgets)
target_link_libraries(${current_executable} PRIVATE Qt5::Gui)
target_link_libraries(${current_executable} PRIVATE Qt5::Concurrent)
target_link_libraries(${current_executable} PRIVATE jbraun::gfx.core)
target_link_libraries(${current_executable} PRIVATE jbraun::gfx.math)
target_link_libraries(${current_executable} PRIVATE jbraun::gfx.ecs)
target_link_libraries(${current_executable} PRIVATE jbraun::gfx.ecs.defaults)
target_link_libraries(${current_executable} PRIVATE jbraun::gfx.file)
target_link_libraries(${current_executable} PRIVATE jbraun::gfx.graphics)
target_link_libraries(${current_executable} PRIVATE jbraun::gfx.shaders)
target_link_libraries(${current_executable} PRIVATE glfw)
copy_dll(${current_executable} Qt5::Core)
copy_dll(${current_executable} Qt5::Widgets)
copy_dll(${current_executable} Qt5::Gui)
copy_dll(${current_executable} Qt5::Concurrent)