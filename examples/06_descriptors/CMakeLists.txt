set(current_executable 06_descriptors)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})
mark_as_executable(${current_executable})
include(${CMAKE_MODULE_PATH}/spv/compile_spv.cmake)
create_spirv(${current_executable}.shaders ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/shaders/path.hpp ${CMAKE_CURRENT_BINARY_DIR} spectral)
target_link_libraries(${current_executable} PRIVATE ${current_executable}.shaders)

target_link_libraries(${current_executable} PRIVATE jbraun::gfx.core jbraun::gfx.math jbraun::gfx.ecs jbraun::gfx.ecs.defaults jbraun::gfx.file jbraun::gfx.legacy gfx.shaders Qt5::Core Qt5::Widgets Qt5::Gui Qt5::Concurrent assimp 06_descriptors.shaders)
copy_dll(${current_executable} assimp)
copy_dll(${current_executable} Qt5::Core)
copy_dll(${current_executable} Qt5::Widgets)
copy_dll(${current_executable} Qt5::Gui)
copy_dll(${current_executable} Qt5::Concurrent)
copy_dll(${current_executable} Qt5::Concurrent)