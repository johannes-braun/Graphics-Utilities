#pragma once

namespace winfw
{
    enum keycode
    {
        mouse_left = 0x01,
        mouse_right = 0x02,
        mouse_middle = 0x04,
        mouse_x1 = 0x05,
        mouse_x2 = 0x06,

        key_back = 0x08,
        key_tab = 0x09,
        key_clear = 0x0c,
        key_return = 0x0d,
        key_shift = 0x10,
        key_control = 0x11,
        key_menu = 0x12,
        key_pause = 0x13,
        key_capital = 0x14,
        key_kana = 0x15,
        key_hangul = 0x15,
        key_junja = 0x17,
        key_final = 0x18,
        key_hanja = 0x19,
        key_kanji = 0x19,

        key_escape = 0x1B,
        key_convert = 0x1C,
        key_nonconvert = 0x1D,
        key_accept = 0x1E,
        key_modechange = 0x1F,
        key_space = 0x20,
        key_prior = 0x21,
        key_next = 0x22,
        key_end = 0x23,
        key_home = 0x24,
        key_left = 0x25,
        key_up = 0x26,
        key_right = 0x27,
        key_down = 0x28,
        key_select = 0x29,
        key_print = 0x2A,
        key_execute = 0x2B,
        key_snapshot = 0x2C,
        key_insert = 0x2D,
        key_delete = 0x2E,
        key_help = 0x2F,
        key_lwin = 0x5B,
        key_rwin = 0x5C,
        key_apps = 0x5D,
        key_sleep = 0x5F,
        key_numpad0 = 0x60,
        key_numpad1 = 0x61,
        key_numpad2 = 0x62,
        key_numpad3 = 0x63,
        key_numpad4 = 0x64,
        key_numpad5 = 0x65,
        key_numpad6 = 0x66,
        key_numpad7 = 0x67,
        key_numpad8 = 0x68,
        key_numpad9 = 0x69,
        key_multiply = 0x6A,
        key_add = 0x6B,
        key_separator = 0x6C,
        key_subtract = 0x6D,
        key_decimal = 0x6E,
        key_divide = 0x6F,
        key_f1 = 0x70,
        key_f2 = 0x71,
        key_f3 = 0x72,
        key_f4 = 0x73,
        key_f5 = 0x74,
        key_f6 = 0x75,
        key_f7 = 0x76,
        key_f8 = 0x77,
        key_f9 = 0x78,
        key_f10 = 0x79,
        key_f11 = 0x7A,
        key_f12 = 0x7B,
        key_f13 = 0x7C,
        key_f14 = 0x7D,
        key_f15 = 0x7E,
        key_f16 = 0x7F,
        key_f17 = 0x80,
        key_f18 = 0x81,
        key_f19 = 0x82,
        key_f20 = 0x83,
        key_f21 = 0x84,
        key_f22 = 0x85,
        key_f23 = 0x86,
        key_f24 = 0x87,
        key_navigation_view = 0x88, // reserved
        key_navigation_menu = 0x89,// reserved
        key_navigation_up = 0x8A, // reserved
        key_navigation_down = 0x8B, // reserved
        key_navigation_left = 0x8C, // reserved
        key_navigation_right = 0x8D, // reserved
        key_navigation_accept = 0x8E, // reserved
        key_navigation_cancel = 0x8F, // reserved
        key_numlock = 0x90,
        key_scroll = 0x91,
        key_oem_nec_equal = 0x92,  // '=' key on numpad
        key_oem_fj_jisho = 0x92,   // 'Dictionary' key
        key_oem_fj_masshou = 0x93,   // 'Unregister word' key
        key_oem_fj_touroku = 0x94,   // 'Register word' key
        key_oem_fj_loya = 0x95,   // 'Left OYAYUBI' key
        key_oem_fj_roya = 0x96,   // 'Right OYAYUBI' key

        /* VK_L* & VK_R* - left and right Alt, Ctrl and Shift virtual keys.
        * Used only as parameters to GetAsyncKeyState() and GetKeyState().
        * No other API or message will distinguish left and right keys in this way. */
        key_lshift = 0xA0,
        key_rshift = 0xA1,
        key_lcontrol = 0xA2,
        key_rcontrol = 0xA3,
        key_lmenu = 0xA4,
        key_rmenu = 0xA5,
        key_browser_back = 0xA6,
        key_browser_forward = 0xA7,
        key_browser_refresh = 0xA8,
        key_browser_stop = 0xA9,
        key_browser_search = 0xAA,
        key_browser_favorites = 0xAB,
        key_browser_home = 0xAC,
        key_volume_mute = 0xAD,
        key_volume_down = 0xAE,
        key_volume_up = 0xAF,
        key_media_next_track = 0xB0,
        key_media_prev_track = 0xB1,
        key_media_stop = 0xB2,
        key_media_play_pause = 0xB3,
        key_launch_mail = 0xB4,
        key_launch_media_select = 0xB5,
        key_launch_app1 = 0xB6,
        key_launch_app2 = 0xB7,
        key_oem_1 = 0xBA,   // ';:' for US
        key_oem_plus = 0xBB,   // '+' any country
        key_oem_comma = 0xBC,   // ',' any country
        key_oem_minus = 0xBD,   // '-' any country
        key_oem_period = 0xBE,   // '.' any country
        key_oem_2 = 0xBF,   // '/?' for US
        key_oem_3 = 0xC0,   // '`~' for US
        key_gamepad_a = 0xC3, // reserved
        key_gamepad_b = 0xC4, // reserved
        key_gamepad_x = 0xC5, // reserved
        key_gamepad_y = 0xC6, // reserved
        key_gamepad_right_shoulder = 0xC7, // reserved
        key_gamepad_left_shoulder = 0xC8, // reserved
        key_gamepad_left_trigger = 0xC9, // reserved
        key_gamepad_right_trigger = 0xCA, // reserved
        key_gamepad_dpad_up = 0xCB, // reserved
        key_gamepad_dpad_down = 0xCC, // reserved
        key_gamepad_dpad_left = 0xCD, // reserved
        key_gamepad_dpad_right = 0xCE, // reserved
        key_gamepad_menu = 0xCF, // reserved
        key_gamepad_view = 0xD0, // reserved
        key_gamepad_left_thumbstick_button = 0xD1, // reserved
        key_gamepad_right_thumbstick_button = 0xD2, // reserved
        key_gamepad_left_thumbstick_up = 0xD3, // reserved
        key_gamepad_left_thumbstick_down = 0xD4, // reserved
        key_gamepad_left_thumbstick_right = 0xD5, // reserved
        key_gamepad_left_thumbstick_left = 0xD6, // reserved
        key_gamepad_right_thumbstick_up = 0xD7, // reserved
        key_gamepad_right_thumbstick_down = 0xD8, // reserved
        key_gamepad_right_thumbstick_right = 0xD9, // reserved
        key_gamepad_right_thumbstick_left = 0xDA, // reserved
        key_oem_4 = 0xDB,  //  '[{' for US
        key_oem_5 = 0xDC,  //  '\|' for US
        key_oem_6 = 0xDD,  //  ']}' for US
        key_oem_7 = 0xDE,  //  ''"' for US
        key_oem_8 = 0xDF,

        /* Various extended or enhanced keyboards */
        key_oem_ax = 0xE1,  //  'AX' key on Japanese AX kbd
        key_oem_102 = 0xE2,  //  "<>" or "\|" on RT 102-key kbd.
        key_ico_help = 0xE3,  //  Help key on ICO
        key_ico_00 = 0xE4,  //  00 key on ICO
        key_ico_clear = 0xE6,
        key_packet = 0xE7,

        /* Nokia/Ericsson definitions */
        key_oem_reset = 0xE9,
        key_oem_jump = 0xEA,
        key_oem_pa1 = 0xEB,
        key_oem_pa2 = 0xEC,
        key_oem_pa3 = 0xED,
        key_oem_wsctrl = 0xEE,
        key_oem_cusel = 0xEF,
        key_oem_attn = 0xF0,
        key_oem_finish = 0xF1,
        key_oem_copy = 0xF2,
        key_oem_auto = 0xF3,
        key_oem_enlw = 0xF4,
        key_oem_backtab = 0xF5,
        key_attn = 0xF6,
        key_crsel = 0xF7,
        key_exsel = 0xF8,
        key_ereof = 0xF9,
        key_play = 0xFA,
        key_zoom = 0xFB,
        key_noname = 0xFC,
        key_pa1 = 0xFD,
        key_oem_clear = 0xFE,
    };
}