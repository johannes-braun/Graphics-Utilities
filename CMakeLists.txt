cmake_minimum_required(VERSION 3.9)
project(GFX)

set(GFX_GLOBAL_FOLDER       ${PROJECT_SOURCE_DIR}/global)
set(GFX_PROJECTS_FOLDER     ${PROJECT_SOURCE_DIR}/projects)
set(GFX_UTILITIES_FOLDER    ${PROJECT_SOURCE_DIR}/utilities)
set(GFX_CMAKE_FOLDER        ${PROJECT_SOURCE_DIR}/cmake)

include(${GFX_CMAKE_FOLDER}/setup_util.cmake)

add_definitions(
    -DGLFW_INCLUDE_NONE -DSTBI_MSC_SECURE_CRT -DGLM_FORCE_RADIANS
    -DGLM_ENABLE_EXPERIMENTAL
    -DASIO_STANDALONE -D_WIN32_WINNT=0x0501 -DNOMINMAX
    -DSOURCE_DIRECTORY="${CMAKE_SOURCE_DIR}/"
)

if(MSVC)
    add_compile_options(/std:c++latest /MP /openmp /permissive- /Zc:twoPhase-)
    set(GFX_LINKER_FLAGS "/NODEFAULTLIB:libcmt /ignore:4098,4099 /MANIFEST:NO")
    list(APPEND GFX_LIBRARIES opengl32)
else()
endif()

file(GLOB GFX_EXTERNAL_LIBRARY_FOLDERS RELATIVE ${GFX_UTILITIES_FOLDER}/ext ${GFX_UTILITIES_FOLDER}/ext/*)
foreach(EXT_LIB ${GFX_EXTERNAL_LIBRARY_FOLDERS})
    if(IS_DIRECTORY ${GFX_UTILITIES_FOLDER}/ext/${EXT_LIB}/include)
        list(APPEND GFX_INCLUDE_DIRECTORIES ${GFX_UTILITIES_FOLDER}/ext/${EXT_LIB}/include)

        if(MSVC)
            if(CMAKE_BUILD_TYPE MATCHES Debug)
                if(IS_DIRECTORY ${GFX_UTILITIES_FOLDER}/ext/${EXT_LIB}/lib/Debug)
                    file(GLOB LOCAL_LIBRARIES "${GFX_UTILITIES_FOLDER}/ext/${EXT_LIB}/lib/Debug/*.lib")
                else()
                    file(GLOB LOCAL_LIBRARIES "${GFX_UTILITIES_FOLDER}/ext/${EXT_LIB}/lib/*.lib")
                endif()
                if(IS_DIRECTORY ${GFX_UTILITIES_FOLDER}/ext/${EXT_LIB}/bin/Debug)
                    file(GLOB LOCAL_DLLS "${GFX_UTILITIES_FOLDER}/ext/${EXT_LIB}/bin/Debug/*.dll")
                else()
                    file(GLOB LOCAL_DLLS "${GFX_UTILITIES_FOLDER}/ext/${EXT_LIB}/bin/*.dll")
                endif()
            else()
                file(GLOB LOCAL_DLLS "${GFX_UTILITIES_FOLDER}/ext/${EXT_LIB}/bin/*.dll")
                file(GLOB LOCAL_LIBRARIES "${GFX_UTILITIES_FOLDER}/ext/${EXT_LIB}/lib/*.lib")
            endif()

            list(APPEND GFX_DLLS ${LOCAL_DLLS})
            list(APPEND GFX_LIBRARIES ${LOCAL_LIBRARIES})
        endif()
    endif()
endforeach()

list(APPEND GFX_INCLUDE_DIRECTORIES "${GFX_UTILITIES_FOLDER}/src")
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY  "${GFX_UTILITIES_FOLDER}/lib")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY  "${GFX_UTILITIES_FOLDER}/lib")
file(GLOB children RELATIVE ${GFX_UTILITIES_FOLDER}/src ${GFX_UTILITIES_FOLDER}/src/*)
foreach(subdir ${children})
    if(IS_DIRECTORY ${GFX_UTILITIES_FOLDER}/src/${subdir})
        file(GLOB_RECURSE GFX_SOURCE_FILE "${GFX_UTILITIES_FOLDER}/src/${subdir}/*.c" "${GFX_UTILITIES_FOLDER}/src/${subdir}/*.cpp" "${GFX_UTILITIES_FOLDER}/src/${subdir}/*.cc")
        if(NOT GFX_SOURCE_FILE)
            # Internal header only library
            set(success 0)
        else()
            add_library(${subdir} ${GFX_SOURCE_FILE})
            list(APPEND GFX_LIBRARIES ${subdir})
            set_target_properties(${subdir} PROPERTIES LINKER_LANGUAGE CXX)
            target_include_directories(${subdir} PUBLIC ${GFX_INCLUDE_DIRECTORIES})
        endif()
    endif()
endforeach()
include_directories(${GFX_INCLUDE_DIRECTORIES})

######## Add internal executables
file(GLOB children RELATIVE ${GFX_PROJECTS_FOLDER} ${GFX_PROJECTS_FOLDER}/*)
foreach(subdir ${children})
    if(IS_DIRECTORY ${GFX_PROJECTS_FOLDER}/${subdir})
        file(GLOB_RECURSE EXE_SOURCES "${GFX_PROJECTS_FOLDER}/${subdir}/src/*.c" "${GFX_PROJECTS_FOLDER}/${subdir}/src/*.cpp" "${GFX_PROJECTS_FOLDER}/${subdir}/src/*.cc")
        if(MSVC)
            file(GLOB WIN_RESOURCES "${GFX_PROJECTS_FOLDER}/${subdir}/src/*.rc")
            if(NOT WIN_RESOURCES)
                set(WIN_RESOURCES "${GFX_GLOBAL_FOLDER}/src/app.rc")
            endif(NOT WIN_RESOURCES)
        endif()

        file(MAKE_DIRECTORY ${GFX_PROJECTS_FOLDER}/${subdir}/src)
        file(MAKE_DIRECTORY ${GFX_PROJECTS_FOLDER}/${subdir}/res)
        file(MAKE_DIRECTORY ${GFX_PROJECTS_FOLDER}/${subdir}/shd)
        file(MAKE_DIRECTORY ${GFX_PROJECTS_FOLDER}/${subdir}/bin)
        
        if(NOT EXISTS ${GFX_PROJECTS_FOLDER}/${subdir}/src/main.cpp)
            message("Creating ${GFX_PROJECTS_FOLDER}/${subdir}/src/main.cpp")
            file(WRITE ${GFX_PROJECTS_FOLDER}/${subdir}/src/main.cpp "int main() {}")
        endif()

        if(NOT EXISTS ${GFX_PROJECTS_FOLDER}/${subdir}/export.xml)
            file(COPY "${GFX_GLOBAL_FOLDER}/src/export_default.xml" DESTINATION ${GFX_PROJECTS_FOLDER}/${subdir})
            file(RENAME "${GFX_PROJECTS_FOLDER}/${subdir}/export_default.xml" ${GFX_PROJECTS_FOLDER}/${subdir}/export.xml)
        endif()

        if(NOT EXISTS ${GFX_PROJECTS_FOLDER}/${subdir}/readme.md)
            file(WRITE ${GFX_PROJECTS_FOLDER}/${subdir}/readme.md "No description available.")
        endif()

        add_executable(${subdir} ${EXE_SOURCES} ${WIN_RESOURCES})
        target_link_libraries(${subdir} ${GFX_LIBRARIES})
        file(COPY ${GFX_DLLS} DESTINATION "${GFX_PROJECTS_FOLDER}/${subdir}/bin")
        set_target_properties(${subdir} PROPERTIES LINKER_LANGUAGE CXX RUNTIME_OUTPUT_DIRECTORY "${GFX_PROJECTS_FOLDER}/${subdir}/bin")
        target_include_directories(${subdir} PUBLIC ${GFX_INCLUDE_DIRECTORIES})
    endif()
endforeach()